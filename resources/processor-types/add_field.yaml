apiVersion: bindplane.observiq.com/v1
kind: ProcessorType
metadata:
  name: add_fields
  displayName: Add Fields
  description: Add telemetry fields.
  labels:
    category: Transform
spec:
  version: 0.1.0
  parameters:
    # Logs
    - name: enable_logs
      label: Enable Logs
      type: bool
      default: false

    - name: log_condition
      label: Log Condition
      description: "An OTTL condition that must evaluate to true to apply this processor. By default, the processor applies to all logs."
      type: string
      default: "true"
      required: true
      options:
        gridColumns: 12
      documentation:
        - text: OTTL Log Context
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/contexts/ottllog/README.md
        - text: OTTL Booleans
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/README.md#booleans
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_resource_attributes
      label: Resource Keys
      description: "List of resource fields to add from telemetry data."
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_resource_action
      label: Resource Action
      type: enum
      description: |
        insert: Add resource if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_attributes
      label: Attribute Keys
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_attributes_action
      label: Attribute Action
      type: enum
      description: |
        insert: Add attribute if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_body
      label: Body Keys
      description: "List of body keys to add to log data."
      type: map
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      options:
        gridColumns: 12

    - name: log_body_action
      label: Body Action
      type: enum
      description: |
        insert: Add body key if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    # Metrics
    - name: enable_metrics
      label: Enable Metrics
      type: bool
      default: false

    - name: datapoint_condition
      label: Datapoint Condition
      description: "An OTTL condition that must evaluate to true to apply this processor. By default, the processor applies to all datapoints."
      type: string
      default: "true"
      required: true
      options:
        gridColumns: 12
      documentation:
        - text: OTTL Datapoint Context
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/contexts/ottldatapoint/README.md
        - text: OTTL Booleans
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/README.md#booleans
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: metric_resource_attributes
      label: Resource Keys
      description: "List of resource fields to add from telemetry data."
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: metric_resource_action
      label: Resource Action
      type: enum
      description: |
        insert: Add resource if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: metric_attributes
      label: Attribute Keys
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: metric_attributes_action
      label: Attribute Action
      type: enum
      description: |
        insert: Add attribute if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    # Trace
    - name: enable_traces
      label: Enable Traces
      type: bool
      default: false

    - name: span_condition
      label: Spans Condition
      description: "An OTTL boolean expression that must evaluate to true to apply this processor. By default, the processor applies to all spans."
      type: string
      default: "true"
      required: true
      options:
        gridColumns: 12
      documentation:
        - text: OTTL Span Context
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/ottl/contexts/ottlspan
        - text: OTTL Booleans
          url: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/README.md#booleans
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: traces_resource_attributes
      label: Resource Keys
      description: "List of resource fields to add from telemetry data."
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: traces_resource_action
      label: Resource Action
      type: enum
      description: |
        insert: Add resource if it does not exist.
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: traces_attributes
      label: Attribute Keys
      type: map
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: traces_attributes_action
      label: Attribute Action
      type: enum
      description: |
        insert: Add attribute if it does not exist. 
        update: Update existing value.
        upsert: Insert or update.
      default: upsert
      validValues:
        - insert
        - update
        - upsert
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

  logs:
    processors: |
      {{ if .enable_logs }}
        - transform/logs:
            error_mode: ignore
            log_statements:
            - context: log
              statements:
                {{- if index . "log_attributes" }}
                  {{- $condition := "!=" }}
                  {{- if eq $.log_attributes_action "insert" }}
                    {{- $condition = "==" }}
                  {{- end }}
                  {{- range $k, $v := .log_attributes }}
                    {{- if ne $.log_attributes_action "upsert" }}
                      - 'set(attributes["{{ $k }}"], "{{ $v }}") where (attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.log_condition }})'
                    {{- else }}
                      - 'set(attributes["{{ $k }}"], "{{ $v }}") where {{ $.log_condition }}'
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if index . "log_resource_attributes" }}
                  {{- $condition := "!=" }}
                  {{- if eq $.log_resource_action "insert" }}
                    {{- $condition = "==" }}
                  {{- end }}
                  {{- range $k, $v := .log_resource_attributes }}
                    {{- if ne $.log_resource_action "upsert" }}
                      - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where (resource.attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.log_condition }})'
                    {{- else }}
                      - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where {{ $.log_condition }}'
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if index . "log_body" }}
                  {{- $condition := "!=" }}
                  {{- if eq $.log_body_action "insert" }}
                    {{- $condition = "==" }}
                  {{- end }}
                  {{- range $k, $v := .log_body }}
                    {{- if ne $.log_body_action "upsert" }}
                      - 'set(body["{{ $k }}"], "{{ $v }}") where (body["{{ $k }}"] {{ $condition }} nil) and ({{ $.log_condition }})'
                    {{- else }}
                      - 'set(body["{{ $k }}"], "{{ $v }}") where {{ $.log_condition }}'
                    {{- end }}
                  {{- end }}
                {{- end }}
      {{ end }}

  metrics:
    processors: |
      {{ if .enable_metrics }}
        - transform/metrics:
            error_mode: ignore
            metric_statements:
            - context: datapoint
              statements:
                {{- if index . "metric_attributes" }}
                  {{- $condition := "!=" }}
                  {{- if eq $.metric_attributes_action "insert" }}
                    {{- $condition = "==" }}
                  {{- end }}
                  {{- range $k, $v := .metric_attributes }}
                    {{- if ne $.metric_attributes_action "upsert" }}
                      - 'set(attributes["{{ $k }}"], "{{ $v }}") where (attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.datapoint_condition }})'
                    {{- else }}
                      - 'set(attributes["{{ $k }}"], "{{ $v }}") where {{ $.datapoint_condition }}'
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if index . "metric_resource_attributes" }}
                  {{- $condition := "!=" }}
                  {{- if eq $.metric_resource_action "insert" }}
                    {{- $condition = "==" }}
                  {{- end }}
                  {{- range $k, $v := .metric_resource_attributes }}
                    {{- if ne $.metric_resource_action "upsert" }}
                      - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where (resource.attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.datapoint_condition }})'
                    {{- else }}
                      - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where {{ $.datapoint_condition }}'
                    {{- end }}
                  {{- end }}
                {{- end }}
      {{ end }}

  traces:
    processors: |
      {{ if .enable_traces }}
         - transform/traces:
             error_mode: ignore
             trace_statements:
             - context: span
               statements:
                 {{- if index . "traces_attributes" }}
                   {{- $condition := "!=" }}
                   {{- if eq $.traces_attributes_action "insert" }}
                     {{- $condition = "==" }}
                   {{- end }}
                   {{- range $k, $v := .traces_attributes }}
                     {{- if ne $.traces_attributes_action "upsert" }}
                       - 'set(attributes["{{ $k }}"], "{{ $v }}") where (attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.span_condition }})'
                     {{- else }}
                       - 'set(attributes["{{ $k }}"], "{{ $v }}") where {{ $.span_condition }}'
                     {{- end }}
                   {{- end }}
                 {{- end }}
                 {{- if index . "traces_resource_attributes" }}
                   {{- $condition := "!=" }}
                   {{- if eq $.traces_resource_action "insert" }}
                     {{- $condition = "==" }}
                   {{- end }}
                   {{- range $k, $v := .traces_resource_attributes }}
                     {{- if ne $.traces_resource_action "upsert" }}
                       - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where (resource.attributes["{{ $k }}"] {{ $condition }} nil) and ({{ $.span_condition }})'
                     {{- else }}
                       - 'set(resource.attributes["{{ $k }}"], "{{ $v }}") where {{ $.span_condition }}'
                     {{- end }}
                   {{- end }}
                 {{- end }}
       {{ end }}
