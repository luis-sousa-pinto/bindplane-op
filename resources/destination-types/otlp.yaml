apiVersion: bindplane.observiq.com/v1
kind: DestinationType
metadata:
  name: otlp_grpc
  displayName: OpenTelemetry (OTLP)
  icon: /icons/destinations/otlp.svg
  description: Send metrics, logs, and traces to an OTLP endpoint.
spec:
  parameters:
    - name: hostname
      label: Hostname
      description: Hostname or IP address where the exporter will send OTLP data.
      type: string
      default: ""
      required: true

    - name: grpc_port
      label: Port
      description: TCP port to which the exporter is going to send OTLP data.
      type: int
      default: 4317
      relevantIf:
        - name: protocol
          operator: equals
          value: "grpc"

    - name: http_port
      label: Port
      description: TCP port to which the exporter is going to send OTLP data.
      type: int
      default: 4318
      relevantIf:
        - name: protocol
          operator: equals
          value: "http"

    - name: protocol
      label: Protocol
      description: The OTLP protocol to use when sending OTLP telemetry.
      type: enum
      default: grpc
      validValues:
        - grpc
        - http

        # Advanced Options
    - name: headers
      label: Additional gRPC Headers
      description: Additional headers to attach to each gRPC request.
      type: map
      default: {}
      advancedConfig: true
      options:
        gridColumns: 12
        labels:
          key: Name
          value: Value
      relevantIf:
        - name: protocol
          operator: equals
          value: "grpc"

    - name: http_compression
      label: Compression
      description: >
        Compression algorithm to use when sending data to the OTLP server.
        Ensure that the server supports the compression algorithm selected.
      type: enum
      validValues:
        - none
        - gzip
        - deflate
        - snappy
        - zlib
        - zstd
      default: gzip
      advancedConfig: true
      relevantIf:
        - name: protocol
          operator: equals
          value: "http"

    - name: grpc_compression
      label: Compression
      description: >
        Compression algorithm to use when sending data to the OTLP server.
        Ensure that the server supports the compression algorithm selected.
      type: enum
      validValues:
        - none
        - gzip
        - snappy
        - zstd
      default: gzip
      advancedConfig: true
      relevantIf:
        - name: protocol
          operator: equals
          value: "grpc"

    # TLS
    - name: enable_tls
      label: Enable TLS
      description: Whether or not to use TLS.
      type: bool
      default: false
      options:
        sectionHeader: true
      advancedConfig: true

    - name: insecure_skip_verify
      label: Skip TLS Certificate Verification
      description: Enable to skip verification of the server's certificate.
      type: bool
      default: false
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: ca_file
      label: TLS Certificate Authority File
      description: Optional Certificate authority file used to validate the server's certificate.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: mutual_tls
      label: Mutual TLS
      description: Whether or not to use client TLS authentication (mTLS).
      type: bool
      default: false
      options:
        sectionHeader: true
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: cert_file
      label: TLS Client Certificate File
      description: A path to the client certificate to be used for mutual TLS.
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
        - name: mutual_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: key_file
      label: TLS Client Private Key
      description: A path to the client private key to be used for mutual TLS.
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
        - name: mutual_tls
          operator: equals
          value: true
      advancedConfig: true

    # Retry on failure
    - name: retry_on_failure_enabled
      label: Enable Retry on Failure
      description: Attempt to resend telemetry data that has failed to be transmitted to the destination.
      type: bool
      documentation:
        - text: Read More
          url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      default: true
      options:
        sectionHeader: true
      advancedConfig: true
      required: false

    - name: retry_on_failure_initial_interval
      label: Initial interval
      description: Time (in seconds) to wait after the first failure before retrying.
      type: int
      default: 5
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    - name: retry_on_failure_max_interval
      label: Max interval
      description: The upper bound (in seconds) on backoff.
      type: int
      default: 30
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    - name: retry_on_failure_max_elapsed_time
      label: Max elapsed time
      description: The maximum amount of time (in seconds) spent trying to send a batch, used to avoid a never-ending retry loop.
      type: int
      default: 300
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    # Sending Queue Options
    - name: sending_queue_enabled
      label: Enable Sending Queue
      description: |
        Buffer telemetry data temporarily before sending to help ensure
        telemetry data is not lost in case of a temporary network outage.
      type: bool
      default: true
      documentation:
        - text: Read More
          url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      options:
        sectionHeader: true
      advancedConfig: true
      required: false

    - name: sending_queue_num_consumers
      label: Number of consumers
      description: Number of consumers that dequeue batches.
      type: int
      default: 10
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: sending_queue_queue_size
      label: Queue size
      description: Maximum number of batches kept in memory before dropping.
      type: int
      default: 5000
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: persistent_queue_enabled
      label: Enable Persistent Queuing
      description: |
        Buffer telemetry data to disk before sending to help ensure
        telemetry data is not lost in case of network outages or collector restarts.
      type: bool
      default: true
      advancedConfig: true
      documentation:
      - text: Read More
        url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      options:
        sectionHeader: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: persistent_queue_directory
      label: Persistent Queue Directory
      description: The directory used to temporarily store telemetry data.
      type: string
      default: $OIQ_OTEL_COLLECTOR_HOME/storage
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true
        - name: persistent_queue_enabled
          operator: equals
          value: true

  logs+metrics+traces:
    extensions: |
      {{ if and .persistent_queue_enabled .sending_queue_enabled }}
      - file_storage:
          directory: {{ .persistent_queue_directory }}
          compaction:
            on_rebound: true
            directory: {{ .persistent_queue_directory }}
      {{ end }}
    exporters: |
      {{ if eq .protocol "grpc" }}
      - otlp:
          endpoint: {{ .hostname }}:{{ .grpc_port }}
          {{ $length := len .headers }} {{ if ne $length 0 }}
          headers:
            {{ range $k, $v := .headers }}
            {{ $k }}: {{ $v }}
            {{ end }}
          {{ end }}
          compression: {{ .grpc_compression }}
          tls:
            {{ if .enable_tls }}
            insecure: false
            insecure_skip_verify: {{ .insecure_skip_verify }}
            ca_file: "{{ .ca_file }}"
            {{ if .mutual_tls }}
            cert_file: "{{ .cert_file }}"
            key_file: "{{ .key_file }}"
            {{ end }}
            {{ else }}
            insecure: true
            {{ end }}
      {{ end }}

      {{ if eq .protocol "http" }}
      - otlphttp:
          {{ if .enable_tls }}
          endpoint: https://{{ .hostname }}:{{ .http_port }}
          {{ else }}
          endpoint: http://{{ .hostname }}:{{ .http_port }}
          {{ end }}
          compression: {{ .http_compression }}
          {{ if .enable_tls }}
          tls:
            insecure_skip_verify: {{ .insecure_skip_verify }}
            ca_file: "{{ .ca_file }}"
            {{ if .mutual_tls }}
            cert_file: "{{ .cert_file }}"
            key_file: "{{ .key_file }}"
            {{ end }}
          {{ end }}
      {{ end }}

          # These settings are used for both otlphttp and otlp
          {{ bpRenderOtelRetryOnFailureConfig .retry_on_failure_enabled .retry_on_failure_initial_interval .retry_on_failure_max_interval .retry_on_failure_max_elapsed_time }}
          {{ bpRenderOtelSendingQueueConfig .sending_queue_enabled .persistent_queue_enabled (bpComponentID "file_storage") .sending_queue_num_consumers .sending_queue_queue_size }}

    processors: |
      - batch:
