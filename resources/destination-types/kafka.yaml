apiVersion: bindplane.observiq.com/v1
kind: DestinationType
metadata:
  name: kafka_otlp_destination
  displayName: Kafka
  description: Publish OpenTelemetry Protocol (OTLP) metrics, logs, and traces to a Kafka topic.
  icon: /icons/destinations/kafka.svg
spec:
  parameters:
    - name: protocol_version
      label: Protocol Version
      description: The Kafka protocol version to use when communicating with brokers.
      type: enum
      validValues:
        - "2.2.1"
        - "2.2.0"
        - "2.0.0"
        - "1.0.0"
      default: "2.0.0"
      options:
        creatable: true

    - name: brokers
      label: Brokers
      description: List of brokers to connect to when publishing metrics, traces and logs.
      type: strings
      default:
        - localhost:9092
      required: true

    - name: timeout
      label: Timeout (seconds)
      description: Timeout (seconds) for every attempt to publish data to the backend.
      type: int
      default: 5

    - name: enable_metrics
      label: Enable Metrics
      type: bool
      default: true

    - name: metric_topic
      label: Metric Topic
      description: The name of the topic to publish metrics to.
      type: string
      options:
        gridColumns: 12
      default: otlp_metrics
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: enable_logs
      label: Enable Logs
      type: bool
      default: true

    - name: log_topic
      label: Log Topic
      description: The name of the topic to publish logs to.
      type: string
      options:
        gridColumns: 12
      default: otlp_logs
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: enable_traces
      label: Enable Traces
      type: bool
      default: true

    - name: trace_topic
      label: Trace Topic
      description: The name of the topic to publish traces to.
      type: string
      options:
        gridColumns: 12
      default: otlp_spans
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: enable_auth
      label: Enable Authentication
      type: bool
      default: false
      options:
        sectionHeader: true
      advancedConfig: true

    - name: auth_type
      label: Auth Type
      type: enum
      validValues:
        - basic
        - sasl
        - kerberos
      default: basic
      advancedConfig: true
      options:
        gridColumns: 12
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true

    - name: basic_username
      label: Username
      type: string
      required: true
      default: ""
      advancedConfig: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: basic

    - name: basic_password
      label: Password
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: basic
      options:
        sensitive: true

    - name: sasl_username
      label: Username
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl

    - name: sasl_password
      label: Password
      type: string
      advancedConfig: true
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl
      options:
        sensitive: true

    - name: sasl_mechanism
      label: Mechanism
      type: enum
      validValues:
        - SCRAM-SHA-256
        - SCRAM-SHA-512
        - PLAIN
      advancedConfig: true
      default: SCRAM-SHA-256
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl

    - name: enable_tls
      label: Enable TLS
      description: Whether or not to use TLS.
      type: bool
      default: false
      advancedConfig: true
      options:
        sectionHeader: true

    - name: tls_insecure
      label: Skip TLS Certificate Verification
      description: Enable to skip TLS certificate verification.
      type: bool
      default: false
      options:
        sectionHeader: true
      advancedConfig: true
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true

    - name: tls_ca_file
      label: Certificate Authority File
      description: Certificate authority used to validate TLS certificates.
      type: string
      required: false
      advancedConfig: true
      default: ""
      relevantIf:
        - name: tls_insecure
          operator: equals
          value: false
        - name: enable_tls
          operator: equals
          value: true

    - name: tls_cert_file
      label: Mutual TLS Client Certificate File
      description: A TLS certificate used for client authentication.
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true

    - name: tls_key_file
      label: Mutual TLS Client Private Key File
      description: A TLS private key used for client authentication.
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true

    - name: tls_server_name_override
      label: Server Name Override
      description: Indicates the name of the server requested by the client in order to support virtual hosting.
      type: string
      required: false
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true

    - name: kerberos_service_name
      label: Service Name
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos

    - name: kerberos_realm
      label: Realm
      type: string
      required: true
      advancedConfig: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos

    - name: kerberos_config_file
      label: Config File
      type: string
      default: /etc/krb5.conf
      advancedConfig: true
      required: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos

    - name: kerberos_auth_type
      label: Kerberos Auth Type
      type: enum
      validValues:
        - keytab
        - basic
      advancedConfig: true
      default: keytab
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos

    - name: kerberos_keytab_file
      label: Keytab File
      type: string
      required: true
      default: /etc/security/kafka.keytab
      advancedConfig: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: keytab

    - name: kerberos_username
      label: Username
      type: string
      required: true
      default: ""
      advancedConfig: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: basic

    - name: kerberos_password
      label: Password
      type: string
      required: true
      default: ""
      advancedConfig: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: basic
      options:
        sensitive: true

    # Retry on failure
    - name: retry_on_failure_enabled
      label: Enable Retry on Failure
      description: Attempt to resend telemetry data that has failed to be transmitted to the destination.
      type: bool
      documentation:
        - text: Read More
          url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      default: true
      options:
        sectionHeader: true
      advancedConfig: true
      required: false

    - name: retry_on_failure_initial_interval
      label: Initial interval
      description: Time (in seconds) to wait after the first failure before retrying.
      type: int
      default: 5
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    - name: retry_on_failure_max_interval
      label: Max interval
      description: The upper bound (in seconds) on backoff.
      type: int
      default: 30
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    - name: retry_on_failure_max_elapsed_time
      label: Max elapsed time
      description: The maximum amount of time (in seconds) spent trying to send a batch, used to avoid a never-ending retry loop.
      type: int
      default: 300
      advancedConfig: true
      required: false
      relevantIf:
        - name: retry_on_failure_enabled
          operator: equals
          value: true

    # Sending Queue Options
    - name: sending_queue_enabled
      label: Enable Sending Queue
      description: |
        Buffer telemetry data temporarily before sending to help ensure
        telemetry data is not lost in case of a temporary network outage.
      type: bool
      default: true
      documentation:
        - text: Read More
          url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      options:
        sectionHeader: true
      advancedConfig: true
      required: false

    - name: sending_queue_num_consumers
      label: Number of consumers
      description: Number of consumers that dequeue batches.
      type: int
      default: 10
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: sending_queue_queue_size
      label: Queue size
      description: Maximum number of batches kept in memory before dropping.
      type: int
      default: 5000
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: persistent_queue_enabled
      label: Enable Persistent Queuing
      description: |
        Buffer telemetry data to disk before sending to help ensure
        telemetry data is not lost in case of network outages or collector restarts.
      type: bool
      default: true
      advancedConfig: true
      documentation:
        - text: Read More
          url: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md
      options:
        sectionHeader: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true

    - name: persistent_queue_directory
      label: Persistent Queue Directory
      description: The directory used to temporarily store telemetry data.
      type: string
      default: $OIQ_OTEL_COLLECTOR_HOME/storage
      advancedConfig: true
      required: false
      relevantIf:
        - name: sending_queue_enabled
          operator: equals
          value: true
        - name: persistent_queue_enabled
          operator: equals
          value: true

  logs+metrics+traces:
    extensions: |
      {{ if and .persistent_queue_enabled .sending_queue_enabled }}
      - file_storage:
          directory: {{ .persistent_queue_directory }}
          compaction:
            on_rebound: true
            directory: {{ .persistent_queue_directory }}
      {{ end }}
  metrics:
    exporters: |
      {{ if .enable_metrics }}
      - kafka/metrics:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: {{ .metric_topic }}
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          timeout: {{ .timeout }}s
          {{ if .enable_auth }}
          auth:
            {{ if .enable_tls }}
            tls:
              insecure: {{ .tls_insecure }}
              ca_file: {{ .tls_ca_file | quote }}
              cert_file: {{ .tls_cert_file | quote }}
              key_file: {{ .tls_key_file | quote }}
              {{ if .tls_server_name_override }}
              server_name_override: {{ .tls_server_name_override | quote }}
              {{ end }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
            {{ end }}
          {{ end }}
          {{ bpRenderOtelRetryOnFailureConfig .retry_on_failure_enabled .retry_on_failure_initial_interval .retry_on_failure_max_interval .retry_on_failure_max_elapsed_time }}
          {{ bpRenderOtelSendingQueueConfig .sending_queue_enabled .persistent_queue_enabled (bpComponentID "file_storage") .sending_queue_num_consumers .sending_queue_queue_size }}
      {{ end }}
    processors: |
      - batch:

  logs:
    exporters: |
      {{ if .enable_logs }}
      - kafka/logs:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: {{ .log_topic }}
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          timeout: {{ .timeout }}s
          {{ if .enable_auth }}
          auth:
            {{ if .enable_tls }}
            tls:
              insecure: {{ .tls_insecure }}
              ca_file: {{ .tls_ca_file | quote }}
              cert_file: {{ .tls_cert_file | quote }}
              key_file: {{ .tls_key_file | quote }}
              {{ if .tls_server_name_override }}
              server_name_override: {{ .tls_server_name_override | quote }}
              {{ end }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
            {{ end }}
          {{ end }}
          {{ bpRenderOtelRetryOnFailureConfig .retry_on_failure_enabled .retry_on_failure_initial_interval .retry_on_failure_max_interval .retry_on_failure_max_elapsed_time }}
          {{ bpRenderOtelSendingQueueConfig .sending_queue_enabled .persistent_queue_enabled (bpComponentID "file_storage") .sending_queue_num_consumers .sending_queue_queue_size }}
      {{ end }}
    processors: |
      - batch:

  traces:
    exporters: |
      {{ if .enable_traces }}
      - kafka/traces:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: {{ .trace_topic }}
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          timeout: {{ .timeout }}s
          {{ if .enable_auth }}
          auth:
            {{ if .enable_tls }}
            tls:
              insecure: {{ .tls_insecure }}
              ca_file: {{ .tls_ca_file | quote }}
              cert_file: {{ .tls_cert_file | quote }}
              key_file: {{ .tls_key_file | quote }}
              {{ if .tls_server_name_override }}
              server_name_override: {{ .tls_server_name_override | quote }}
              {{ end }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "tls" }}
          
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
            {{ end }}
          {{ end }}
          {{ bpRenderOtelRetryOnFailureConfig .retry_on_failure_enabled .retry_on_failure_initial_interval .retry_on_failure_max_interval .retry_on_failure_max_elapsed_time }}
          {{ bpRenderOtelSendingQueueConfig .sending_queue_enabled .persistent_queue_enabled (bpComponentID "file_storage") .sending_queue_num_consumers .sending_queue_queue_size }}
      {{ end }}
    processors: |
      - batch:
