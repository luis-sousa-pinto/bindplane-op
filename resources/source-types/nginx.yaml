apiVersion: bindplane.observiq.com/v1
kind: SourceType
metadata:
  name: nginx
  displayName: NGINX
  icon: /icons/sources/nginx.svg
  description: Collect metrics and logs from NGINX.
spec:
  version: 0.0.1
  supportedPlatforms:
    - macos
    - linux
    - windows
  parameters:
    # Metrics
    #
    - name: enable_metrics
      label: Enable Metrics
      description: Enable to collect metrics.
      type: bool
      default: true

    - name: endpoint
      label: Endpoint
      description: The endpoint of the NGINX server.
      type: string
      required: true
      default: "http://localhost:80/status"
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: disable_metrics
      label: Filtering
      type: metrics
      default: []
      advancedConfig: true
      options:
        metricCategories:
          - label: NGINX Metrics
            metrics:
              - name: nginx.connections_accepted
              - name: nginx.connections_current
              - name: nginx.connections_handled
              - name: nginx.requests
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    # Metrics TLS Settings #
    - name: enable_tls
      label: Enable TLS
      description: Whether or not to use TLS.
      type: bool
      default: false
      options:
        sectionHeader: true
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      advancedConfig: true

    - name: insecure_skip_verify
      label: Skip TLS Certificate Verification
      description: Enable to skip TLS certificate verification.
      type: bool
      default: false
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: ca_file
      label: TLS Certificate Authority File
      description: Certificate authority used to validate TLS certificates.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: cert_file
      label: TLS Client Certificate File
      description: A TLS certificate used for client authentication, if mutual TLS is enabled.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: key_file
      label: TLS Client Private Key File
      description: A TLS private key used for client authentication, if mutual TLS is enabled.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: collection_interval
      label: Collection Interval
      description: How often (seconds) to scrape for metrics.
      type: int
      default: 60
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      advancedConfig: true

    # Logging
    #
    - name: enable_logs
      label: Enable Logs
      description: Enable to collect logs.
      type: bool
      default: true

    - name: data_flow
      label: Data Flow
      description: Enable high flow or reduced low flow.
      type: enum
      default: high
      validValues:
        - high
        - low
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_format
      label: Log Format
      type: enum
      validValues:
        - default
        - observiq
      default: default
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

    - name: access_log_paths
      label: Access Log Paths
      description: Path to NGINX access log file(s).
      type: strings
      options:
        gridColumns: 12
      default:
        - "/var/log/nginx/access.log*"
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

    - name: error_log_paths
      label: Error Log Paths
      description: Path to NGINX error log file(s).
      type: strings
      options:
        gridColumns: 12
      default:
        - "/var/log/nginx/error.log*"
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

    - name: start_at
      label: Start At
      description: Start reading logs from 'beginning' or 'end'.
      type: enum
      validValues:
        - beginning
        - end
      default: end
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

  metrics:
    receivers: |
      {{ if .enable_metrics }}
      - nginx:
          endpoint: {{ .endpoint }}
          collection_interval: {{ .collection_interval }}s
          tls:
          {{ if .enable_tls }}
            insecure: false
            insecure_skip_verify: {{ .insecure_skip_verify }}
            ca_file: "{{ .ca_file }}"
            cert_file: "{{ .cert_file }}"
            key_file: "{{ .key_file }}"
          {{ else }}
            insecure: true
          {{ end }}
          metrics:
            {{ range $m := .disable_metrics }}
            {{ $m }}:
              enabled: false
            {{ end }}
      {{ end }}

    processors: |
      {{ if .enable_metrics }}
      - resourcedetection:
          detectors: ["system"]
          system:
            hostname_sources: ["os"]
      {{ end }}

  logs:
    receivers: |
      {{ if .enable_logs }}
      - plugin/nginx:
          path: $OIQ_OTEL_COLLECTOR_HOME/plugins/nginx_logs.yaml
          parameters:
            log_format: {{ .log_format }}
            access_log_paths:
            {{ range $fp := .access_log_paths }}
            - '{{ $fp }}'
            {{end}}
            error_log_paths:
            {{ range $fp := .error_log_paths }}
            - '{{ $fp }}'
            {{end}}
            start_at: {{ .start_at }}
            data_flow: {{ .data_flow }}
      {{ end }}

    processors: |
      {{ if .enable_logs }}
      - resourcedetection:
          detectors: ["system"]
          system:
            hostname_sources: ["os"]
      {{ end }}
