apiVersion: bindplane.observiq.com/v1
kind: SourceType
metadata:
  name: kafka_otlp_source
  displayName: Kafka Stream
  description: Subscribe to a Kafka topic and receive metrics, logs, and traces.
  icon: /icons/destinations/kafka.svg
  additionalInfo:
    message: The TLS option for Auth Type has been moved to the Enable TLS section and is deprecated as of v1.23.0. It will be removed in a future release. If you are using TLS please select the Enable TLS options and choose the appropriate Auth Type for your environment.
spec:
  version: 0.1.0
  supportedPlatforms:
    - macos
    - linux
    - windows
  parameters:
    - name: protocol_version
      label: Protocol Version
      description: The Kafka protocol version to use when communicating with brokers.
      type: enum
      validValues:
        - "2.2.1"
        - "2.2.0"
        - "2.0.0"
        - "1.0.0"
      default: "2.0.0"
      options:
        creatable: true

    - name: brokers
      label: Brokers
      description: List of brokers to connect and subscribe to for metrics, traces and logs.
      type: strings
      default:
        - localhost:9092
      required: true

    - name: group_id
      label: Group ID
      description: Consumer group to consume messages from.
      type: string
      default: otel-collector
      required: true

    - name: client_id
      label: Client ID
      description: The consumer client ID that the receiver will use.
      type: string
      default: otel-collector
      required: true

    - name: enable_metrics
      label: Enable Metrics
      type: bool
      default: true

    - name: metric_topic
      label: Metric Topic
      description: The topic name for subscribing to metric events.
      type: string
      default: otlp_metrics
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: enable_logs
      label: Enable Logs
      type: bool
      default: true

    - name: log_topic
      label: Log Topic
      description: The topic name for subscribing to log events.
      type: string
      default: otlp_logs
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: log_encoding
      label: Log Encoding
      description: The encoding of the log event pulled from the Kafka topic.
      type: enum
      validValues:
        - otlp_proto
        - text
        - json
      default: otlp_proto
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true

    - name: enable_traces
      label: Enable Traces
      type: bool
      default: true

    - name: trace_topic
      label: Trace Topic
      description: The topic name for subscribing to trace events.
      type: string
      default: otlp_spans
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: trace_encoding
      label: Trace Encoding
      description: The encoding of the trace event pulled from the Kafka topic.
      type: enum
      validValues:
        - otlp_proto
        - jaeger_proto
        - jaeger_json
        - zipkin_proto
        - zipkin_json
        - zipkin_thrift
      default: otlp_proto
      relevantIf:
        - name: enable_traces
          operator: equals
          value: true

    - name: enable_auth
      label: Enable Authentication
      type: bool
      default: false
      options:
        sectionHeader: true
      advancedConfig: true

    - name: auth_type
      label: Auth Type
      type: enum
      validValues:
        - basic
        - sasl
        - kerberos
        - tls
      default: basic
      options:
        sectionHeader: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
      advancedConfig: true

    - name: basic_username
      label: Username
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: basic
      advancedConfig: true

    - name: basic_password
      label: Password
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: basic
      advancedConfig: true

    - name: sasl_username
      label: Username
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl
      advancedConfig: true

    - name: sasl_password
      label: Password
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl
      advancedConfig: true

    - name: sasl_mechanism
      label: Mechanism
      type: enum
      validValues:
        - SCRAM-SHA-256
        - SCRAM-SHA-512
        - PLAIN
      default: SCRAM-SHA-256
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: sasl
      advancedConfig: true

    - name: kerberos_service_name
      label: Service Name
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
      advancedConfig: true

    - name: kerberos_realm
      label: Realm
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
      advancedConfig: true

    - name: kerberos_config_file
      label: Config File
      type: string
      default: /etc/krb5.conf
      required: true
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
      advancedConfig: true

    - name: kerberos_auth_type
      label: Kerberos Auth Type
      type: enum
      validValues:
        - keytab
        - basic
      default: keytab
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
      advancedConfig: true

    - name: kerberos_keytab_file
      label: Keytab File
      type: string
      required: true
      default: /etc/security/kafka.keytab
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: keytab
      advancedConfig: true

    - name: kerberos_username
      label: Username
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: basic
      advancedConfig: true

    - name: kerberos_password
      label: Password
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_auth
          operator: equals
          value: true
        - name: auth_type
          operator: equals
          value: kerberos
        - name: kerberos_auth_type
          operator: equals
          value: basic
      advancedConfig: true

    - name: enable_tls
      label: Enable TLS
      description: Whether or not to use TLS.
      type: bool
      default: false
      advancedConfig: true
      options:
        sectionHeader: true

    - name: insecure_skip_verify
      label: Skip TLS Certificate Verification
      description: Enable to skip TLS certificate verification.
      type: bool
      default: false
      options:
        sectionHeader: true
      advancedConfig: true
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true

    - name: ca_file
      label: TLS Certificate Authority File
      description: Certificate authority used to validate TLS certificates.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: cert_file
      label: Mutual TLS Client Certificate File
      description: A TLS certificate used for client authentication.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: key_file
      label: TLS Client Private Key File
      description: A TLS private key used for client authentication.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

  metrics:
    receivers: |
      {{ if .enable_metrics }}
      - kafka/metrics:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: "{{ .metric_topic }}"
          group_id: "{{ .group_id }}"
          client_id: "{{ .client_id }}"
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          {{ if .enable_auth }}
          auth:
            {{ if or .enable_tls (eq .auth_type "tls") }}
            tls:
              ca_file: {{ .ca_file }}
              cert_file: {{ .cert_file }}
              key_file: {{ .key_file }}
              insecure: {{ .insecure_skip_verify }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
             {{ end }}
          autocommit:
            enable: true
          message_marking:
            after: false
            on_error: false
          {{ end }}
        {{ end }}
    processors: |
      - batch:

  logs:
    receivers: |
      {{ if .enable_logs }}
      - kafka/logs:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: "{{ .log_topic }}"
          encoding: "{{ .log_encoding }}"
          group_id: "{{ .group_id }}"
          client_id: "{{ .client_id }}"
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          {{ if .enable_auth }}
          auth:
            {{ if or .enable_tls (eq .auth_type "tls") }}
            tls:
              ca_file: {{ .ca_file }}
              cert_file: {{ .cert_file }}
              key_file: {{ .key_file }}
              insecure: {{ .insecure_skip_verify }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
            {{ end }}
          autocommit:
            enable: true
          message_marking:
            after: false
            on_error: false
          {{ end }}
        {{ end }}
    processors: |
      - batch:

  traces:
    receivers: |
      {{ if .enable_traces }}
      - kafka/traces:
          brokers:
            {{ range $b := .brokers }}
            - {{ $b }}
            {{ end }}
          protocol_version: {{ .protocol_version }}
          topic: "{{ .trace_topic }}"
          encoding: "{{ .trace_encoding }}"
          group_id: "{{ .group_id }}"
          client_id: "{{ .client_id }}"
          metadata:
            # Retry broker connections with a backoff instead of
            # failing on startup.
            full: false
          {{ if .enable_auth }}
          auth:
            {{ if or .enable_tls (eq .auth_type "tls") }}
            tls:
              ca_file: {{ .ca_file }}
              cert_file: {{ .cert_file }}
              key_file: {{ .key_file }}
              insecure: {{ .insecure_skip_verify }}
            {{ end }}
            {{ if eq .auth_type "basic" }}
            plain_text:
              username: "{{ .basic_username }}"
              password: "{{ .basic_password }}"
            {{ else if eq .auth_type "sasl" }}
            sasl:
              username: "{{ .sasl_username }}"
              password: "{{ .sasl_password }}"
              mechanism: {{ .sasl_mechanism }}
            {{ else if eq .auth_type "kerberos" }}
            kerberos:
              service_name: {{ .kerberos_service_name }}
              realm: {{ .kerberos_realm }}
              {{ if eq .kerberos_auth_type "keytab "}}
              use_keytab: true
              keytab_file: {{ .kerberos_keytab_file }}
              {{ else }}
              use_keytab: false
              username: {{ .kerberos_username }}
              password: {{ .kerberos_password }}
              {{ end }}
              config_file: {{ .kerberos_config_file }}
            {{ end }}
          autocommit:
            enable: true
          message_marking:
            after: false
            on_error: false
          {{ end }}
        {{ end }}
    processors: |
      - batch:
