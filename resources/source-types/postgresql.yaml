apiVersion: bindplane.observiq.com/v1
kind: SourceType
metadata:
  name: postgresql
  displayName: PostgreSQL
  icon: /icons/sources/postgres.svg
  description: Collect metrics and logs from PostgreSQL.
spec:
  version: 0.0.1
  supportedPlatforms:
    - macos
    - linux
    - windows
  parameters:
    # Metrics
    #
    - name: enable_metrics
      label: Enable Metrics
      description: Enable to collect metrics.
      type: bool
      default: true
      options:
        gridColumns: 12

    - name: endpoint
      label: Endpoint
      description: The endpoint of the PostgreSQL server. If transport is set to unix, the endpoint will internally be translated from host:port to /host.s.PGSQL.port.
      type: string
      default: localhost:5432
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: transport
      label: Transport
      description: The transport protocol being used to connect to PostgreSQL.
      type: enum
      validValues:
        - tcp
        - unix
      default: tcp
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: username
      label: Username
      description: Username used to authenticate.
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true

    - name: password
      label: Password
      description: Password used to authenticate.
      type: string
      required: true
      default: ""
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      options:
        sensitive: true

    - name: databases
      label: Databases
      description: The list of databases for which the receiver will attempt to collect statistics. If an empty list is provided, the receiver will attempt to collect statistics for all databases.
      type: strings
      required: false
      default: []
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      advancedConfig: true

    - name: collection_interval
      label: Collection Interval
      description: How often (seconds) to scrape for metrics.
      type: int
      default: 60
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      advancedConfig: true

    # Metrics TLS Settings #

    - name: enable_tls
      label: Enable TLS
      description: Whether or not to use TLS.
      type: bool
      default: false
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      options:
        gridColumns: 12
        sectionHeader: true
      advancedConfig: true

    - name: ca_file
      label: TLS Certificate Authority File
      description: Certificate authority used to validate TLS certificates.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: cert_file
      label: Mutual TLS Client Certificate File
      description: A TLS certificate used for client authentication, if mutual TLS is enabled.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: key_file
      label: Mutual TLS Client Private Key File
      description: A TLS private key used for client authentication, if mutual TLS is enabled.
      type: string
      required: false
      default: ""
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: insecure_skip_verify
      label: Skip TLS Certificate Verification
      description: Enable to skip TLS certificate verification.
      type: bool
      default: false
      relevantIf:
        - name: enable_tls
          operator: equals
          value: true
      advancedConfig: true

    - name: disable_metrics
      label: Metrics
      type: metrics
      options:
        metricCategories:
          - label: Metrics
            metrics:
              - name: postgresql.backends
              - name: postgresql.blocks_read
              - name: postgresql.commits
              - name: postgresql.db_size
              - name: postgresql.operations
              - name: postgresql.rollbacks
              - name: postgresql.rows
      default: []
      relevantIf:
        - name: enable_metrics
          operator: equals
          value: true
      advancedConfig: true

    # Logging
    #
    - name: enable_logs
      label: Enable Logs
      description: Enable to collect logs.
      type: bool
      default: true
      options:
        gridColumns: 12

    - name: postgresql_log_path
      label: Log Paths
      description: Path to PostgreSQL log file(s).
      type: strings
      options:
        gridColumns: 12
      default:
        # Default log paths for Debain / Ubuntu
        - "/var/log/postgresql/postgresql*.log"
        # Default log paths for SLES
        - "/var/lib/pgsql/data/log/postgresql*.log"
        # Default log paths for CentOS / RHEL
        - "/var/lib/pgsql/*/data/log/postgresql*.log"
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

    - name: start_at
      label: Start At
      description: Start reading logs from 'beginning' or 'end'.
      type: enum
      validValues:
        - beginning
        - end
      default: end
      relevantIf:
        - name: enable_logs
          operator: equals
          value: true
      advancedConfig: true

  metrics:
    receivers: |
      {{ if .enable_metrics }}
      - postgresql:
          username: {{ .username }}
          password: {{ .password }}
          endpoint: {{ .endpoint }}
          transport: {{ .transport }}
          {{ if .databases }}
          databases:
            {{ range $db := .databases }}
            - '{{ $db }}'
            {{ end }}
          {{ end }}
          collection_interval: {{ .collection_interval }}s
          tls:
          {{ if .enable_tls }}
            insecure: false
            insecure_skip_verify: {{ .insecure_skip_verify }}
            ca_file: "{{ .ca_file }}"
            cert_file: "{{ .cert_file }}"
            key_file: "{{ .key_file }}"
          {{ else }}
            insecure: true
          {{ end }}

          metrics:
            {{ range $m := .disable_metrics }}
            {{ $m }}:
              enabled: false
            {{ end }}
      {{ end }}

    processors: |
      {{ if .enable_metrics }}
      - resourcedetection:
          detectors: ["system"]
          system:
            hostname_sources: ["os"]
      {{ end }}

  logs:
    receivers: |
      {{ if .enable_logs }}
      - plugin/postgresql:
          path: $OIQ_OTEL_COLLECTOR_HOME/plugins/postgresql_logs.yaml
          parameters:
            postgresql_log_path:
            {{ range $fp := .postgresql_log_path }}
            - '{{ $fp }}'
            {{end}}
            start_at: {{ .start_at }}
      {{ end }}

    processors: |
      {{ if .enable_logs }}
      - resourcedetection:
          detectors: ["system"]
          system:
            hostname_sources: ["os"]
      {{ end }}
