name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.ORG_OBSERVIQ_PUBLIC_GCR_JSON_KEY }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: "1.20.5"

      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: /home/runner/go/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache NPM
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ui/node_modules
          key: npm-cache-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: npm-cache-

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.20.0
          args: release --clean --parallelism 1
          distribution: goreleaser-pro
        env:
          # github token requires permission to observiq/bindplane-op and observiq/homebrew-bindplane-op
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
