// Code generated by mockery v2.31.1. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/observiq/bindplane-op/model"
	mock "github.com/stretchr/testify/mock"

	store "github.com/observiq/bindplane-op/store"
)

// MockRolloutBatcher is an autogenerated mock type for the RolloutBatcher type
type MockRolloutBatcher struct {
	mock.Mock
}

// Batch provides a mock function with given fields: ctx, agentEvents
func (_m *MockRolloutBatcher) Batch(ctx context.Context, agentEvents store.Events[*model.Agent]) error {
	ret := _m.Called(ctx, agentEvents)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, store.Events[*model.Agent]) error); ok {
		r0 = rf(ctx, agentEvents)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shutdown provides a mock function with given fields: ctx
func (_m *MockRolloutBatcher) Shutdown(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockRolloutBatcher creates a new instance of MockRolloutBatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRolloutBatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRolloutBatcher {
	mock := &MockRolloutBatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
